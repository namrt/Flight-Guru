Data Aggregation Query (for Denormalization of Data when importing from relational to NoSQL) – 

db.flight_new.aggregate({$lookup: {from: "airport", localField: "DEST", foreignField: "Code", as: "dest_airport_details"}}, {$lookup: {from: "airline", localField: "OP_CARRIER", foreignField: "IATA_CODE", as: "airline_details"}}, {$out: "finaldata"})

//This Query creates 2 Child documents in each document: 1 for Airline Details and another for Destination Airport Details


Index Creation – 

db.finaldata.createIndex({ORIGIN:1, DEST:1, Month:1})

//This creates an index on the final collection for Origin, Destination and Month. Query execution became exceptionally fast after this for both, Best Flights and Best Destinations.

DropDown Population – 

db.airport.find({}, {Code:1, Name:1, _id:0})
 


Best Flights – 

db.finaldata.aggregate([ {$match: {ORIGIN: "IAH", DEST: "LAX", Month: 1}},  {$group: {_id : {CARRIER : '$OP_CARRIER', ORIGIN : '$ORIGIN', DEST : '$DEST', Month : '$Month', AIRLINE : '$airline_details.AIRLINE'}, average_delay: {$avg: {$sum: ["$ARR_DELAY", "$DEP_DELAY"]}}}}, {$project: {ORIGIN: '$_id.ORIGIN', DEST: '$_id.DEST', Month: '$_id.Month', CARRIER: '$_id.CARRIER' , average_delay: '$average_delay', AIRLINE: '$_id.AIRLINE' ,_id:0}}, {$sort: {average_delay: 1}}, {$limit: 5}])



Best Destinations - 

db.finaldata.aggregate([{$match: {ORIGIN: "SNA", Month: 1}}, {$group: {_id: {DEST: '$DEST', ORIGIN: '$ORIGIN', LOCATION: '$dest_airport_details.Location', Month: '$Month'}, no_of_flights: {$sum: 1}}}, {$sort: {no_of_flights: -1}}, {$limit: 5}])
